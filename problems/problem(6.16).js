const result = sumOfDigits(123);
console.log(result);

function sumOfDigits(num) {
  // Базовый случай: если число 0, то сумма цифр равна 0
  if (num === 0) {
    return 0;
  }
  // Рекурсивный случай:
  // Добавляем последнюю цифру (num % 10) к сумме цифр оставшейся части числа (целочисленное деление на 10)
  return (num % 10) + sumOfDigits(Math.floor(num / 10));
}

// Как это работает:
// Базовый случай: когда num становится равным 0, функция возвращает 0. Это означает, что если в числе больше нет цифр, то дальнейшее суммирование прекращается.

// Рекурсивный случай: функция берёт последний разряд числа с помощью num % 10 и прибавляет его к результату рекурсивного вызова sumOfDigits(Math.floor(num / 10)). Выражение Math.floor(num / 10) удаляет последнюю цифру, переходя к следующему разряду числа.

// Например, для числа 123 вычисление будет таким:

// 123: (123 % 10) = 3 плюс sumOfDigits(12)

// 12: (12 % 10) = 2 плюс sumOfDigits(1)

// 1: (1 % 10) = 1 плюс sumOfDigits(0)

// 0: возвращается 0, и разворачивается рекурсия: 1 + 0 = 1, 2 + 1 = 3, 3 + 3 = 6.
